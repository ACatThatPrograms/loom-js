import Web3 from 'web3'
import { EthCardsContract } from './cards-contract'
import { PlasmaUser } from '../../..'

export const DEFAULT_GAS = '3141592'
export const CHILD_BLOCK_INTERVAL = 1000

export const web3Endpoint = 'http://127.0.0.1:8545'
export const eventsEndpoint = 'ws://127.0.0.1:8545'
export const dappchainEndpoint = 'http://localhost:46658'

// TODO: these should be pulled out of a config file generated by a Truffle migration
export const ADDRESSES = {
  validator_manager: '0xf5cad0db6415a71a5bc67403c87b56b629b4ddaa',
  root_chain: '0x9e51aeeeca736cd81d27e025465834b8ec08628a',
  token_contract: '0x1aa76056924bf4768d63357eca6d6a56ec929131',
  loom_token: '0x6804f48233f6ff2b468f7636560d525ca951931e'
}

// TODO: these should be pulled out of a config file generated by a Truffle migration
export const ACCOUNTS = {
  authority: '0x7920ca01d3d1ac463dfd55b5ddfdcbb64ae31830f31be045ce2d51a305516a37',
  alice: '0xbb63b692f9d8f21f0b978b596dc2b8611899f053d68aec6c1c20d1df4f5b6ee2',
  bob: '0x2f615ea53711e0d91390e97cdd5ce97357e345e441aa95d255094164f44c8652',
  charlie: '0x7d52c3f6477e1507d54a826833169ad169a56e02ffc49a1801218a7d87ca50bd',
  dan: '0x6aecd44fcb79d4b68f1ee2b2c706f8e9a0cd06b0de4729fe98cfed8886315256',
  mallory: '0x686e245584fdf696abd739c0e66ac6e01fc4c68babee20c7124566e118b2a634',
  eve: '0x9fd4ab25e1699bb252f4d5c4510a135db34b3adca8baa03194ad5cd6faa13a1d',
  trudy: '0xe8445efa4e3349c3c74fd6689553f93b55aca723115fb777e1e6f4db2a0a82ca',
  fred: '0x56901d80abc6953d1dc01de2f077b75260f49a3304f665b57ed13514a7e2a2bc',
  greg: '0xedc63d0e14b29aaa26c7585e962f93abb59bd7d8b01b585e073dc03d052a000b',
  harry: '0x6b9e9cc46d205668eff6eaa0c4ec6375d475e8ebd821bc79cc4239571560df15'
}

export const DAPPCHAIN_ACCOUNTS = {
  alice:
    'iDAg84PiCWf4kAYzSnKtlu1rU///XpLqJUuimPEoV1Jp+GtLJa+yXdM/nZOZLcbm9CDAvnYMa/SKQeRNi/ciHA==',
  bob: '3eHnPMZ9J67MT90L5UbFbDm+WYtguxmtGaVeMsebP0h3oS6er8TwYNoFzk5bbXioeehI2Qg2FH0i25CFj6AALw==',
  charlie:
    'DmYcg2tQreOUrljct8fI1IMp/eWxcR02W1O6tLFCgmMhjtTPv8N50ebTTLw0rFm0FsCGgOMHZQb/ZHN33YImtQ==',
  dan: '24cBLX65S7rutcByV3c7SWHySj7vtEmMxaS4djLsy7z+yxfUutefMTovCMn2s0OJSy9DgNEu1uJUTs2iEVW6lg==',
  mallory:
    'buCpQHL5EHiK9XeogXTykYOpBCLsqba2orCz4CzZ04oQ52tSpIUaHWSKxHUgsVsobOCkE+cWLQKqSv6hoX18SQ==',
  eve: 'HwDk9DnZ3ALjSmH+K9JmYDZoaIFczVJL5rUfUAMhzL5cgZv8ipxXQsyhNG6FaqIrWKS6FahNsDxlFLlS3/PKGg==',
  trudy:
    'OCaglZBla+uurtHH6PRVL5M8C1L/4F0OO1kNn2O8T8Ry0MW5xk5D8tZHmog5Z1yZ95i8iUyFoeVArgJZbie0oQ==',
  fred: '0TuAsWkzCj9l1vfcwz9PRVD59rMuBSE9i93ljb3GI73PLjIsZUOyEQv5Gv4sV+iu64QK0DTWA8D9gMCzf0Yo6w==',
  greg: 'acyxTNkaEQRGtxgwgy0tvRZ7zvz3XlNZY7JghanFhciMbDMH92QjVWdCvoh384FT0D80RP3+ewq4rOm7QRzuOg==',
  harry: 'r0mWIq9Dmgdfe++v9fquBd4fwNtNP/OoeNqtTpSN3g9+z0yK4T+QAWQsshjMCkCwTp8SYmRVDwaK5/FbDUys4Q=='
}

export function sleep(ms: any) {
  return new Promise(resolve => setTimeout(resolve, ms))
}

export function getTestUrls() {
  return {
    wsWriteUrl: process.env.TEST_LOOM_DAPP_WS_WRITE_URL || 'ws://127.0.0.1:46658/websocket',
    wsReadUrl: process.env.TEST_LOOM_DAPP_WS_READ_URL || 'ws://127.0.0.1:46658/queryws',
    httpWriteUrl: process.env.TEST_LOOM_DAPP_HTTP_WRITE_URL || 'http://127.0.0.1:46658/rpc',
    httpReadUrl: process.env.TEST_LOOM_DAPP_HTTP_READ_URL || 'http://127.0.0.1:46658/query'
  }
}

// All the contracts are expected to have been deployed to Ganache when this function is called.
export function setupContracts(web3: Web3): { cards: EthCardsContract } {
  const abi = require('./contracts/cards-abi.json')
  const cards = new EthCardsContract(new web3.eth.Contract(abi, ADDRESSES.token_contract))
  return { cards }
}

interface Accounts {
  alice: PlasmaUser
  bob: PlasmaUser
  charlie: PlasmaUser
  dan: PlasmaUser
  eve: PlasmaUser
  trudy: PlasmaUser
  mallory: PlasmaUser
  greg: PlasmaUser
  fred: PlasmaUser
  harry: PlasmaUser
}

export function disconnectAccounts(accounts: Accounts) {
  accounts.alice.disconnect()
  accounts.bob.disconnect()
  accounts.charlie.disconnect()
  accounts.dan.disconnect()
  accounts.eve.disconnect()
  accounts.trudy.disconnect()
  accounts.mallory.disconnect()
  accounts.greg.disconnect()
  accounts.fred.disconnect()
  accounts.harry.disconnect()
}

export async function setupAccounts(): Promise<Accounts> {
  const alice = await PlasmaUser.createOfflineUser(
    ACCOUNTS.alice,
    DAPPCHAIN_ACCOUNTS.alice,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'alice_db'
  )

  const bob = await PlasmaUser.createOfflineUser(
    ACCOUNTS.bob,
    DAPPCHAIN_ACCOUNTS.bob,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'bob_db'
  )

  const charlie = await PlasmaUser.createOfflineUser(
    ACCOUNTS.charlie,
    DAPPCHAIN_ACCOUNTS.charlie,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'charlie_db'
  )

  const dan = await PlasmaUser.createOfflineUser(
    ACCOUNTS.dan,
    DAPPCHAIN_ACCOUNTS.dan,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'dan_db'
  )

  const eve = await PlasmaUser.createOfflineUser(
    ACCOUNTS.eve,
    DAPPCHAIN_ACCOUNTS.eve,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'eve_db'
  )

  const trudy = await PlasmaUser.createOfflineUser(
    ACCOUNTS.trudy,
    DAPPCHAIN_ACCOUNTS.trudy,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'trudy_db'
  )

  const mallory = await PlasmaUser.createOfflineUser(
    ACCOUNTS.mallory,
    DAPPCHAIN_ACCOUNTS.mallory,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'mallory_db'
  )

  const greg = await PlasmaUser.createOfflineUser(
    ACCOUNTS.greg,
    DAPPCHAIN_ACCOUNTS.greg,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'greg_db'
  )

  const fred = await PlasmaUser.createOfflineUser(
    ACCOUNTS.fred,
    DAPPCHAIN_ACCOUNTS.fred,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'fred_db'
  )

  const harry = await PlasmaUser.createOfflineUser(
    ACCOUNTS.harry,
    DAPPCHAIN_ACCOUNTS.harry,
    web3Endpoint,
    ADDRESSES.root_chain,
    dappchainEndpoint,
    eventsEndpoint,
    'harry_db'
  )

  return { alice, bob, charlie, dan, eve, mallory, trudy, greg, fred, harry }
}
